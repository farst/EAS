library(simmer)
library(plotly)

testTraj <- trajectory(name = "testTraj") %>% 
  log_(message = "entity entered") %>% 
  seize(resource = "server") %>% 
  log_(message = "server is busy") %>% 
  timeout(task = 10) %>% 
  release(resource = "server") %>% 
  log_(message = "server is free")

testEnv <- simmer(name = "test") %>% 
  add_resource(name = "server", capacity = 1, queue_size = 5, queue_size_strict = TRUE) %>% 
  add_generator(name_prefix = "ore", trajectory = testTraj, distribution = at(seq(20,130,5))) %>% 
  run(until = 125)

testEnv %>% get_mon_arrivals()
testEnv %>% get_mon_attributes()
testEnv %>% get_mon_resources()

serverPlot <- plot_ly(data = testEnv %>% get_mon_resources(), x =~ time, y = ~ server, type = "scatter", mode = "lines")
queuePlot <- plot_ly(data = testEnv %>% get_mon_resources(), x =~ time, y = ~ queue, type = "scatter", mode = "lines")
subplot(serverPlot, queuePlot, nrows = 2, shareX = T)
